import { Markup } from 'telegraf';
import arena from '../arena';
import type { Player } from '../arena/PlayersService';
import { Profs } from '../data';

const MAX_MESSAGE_LENGTH = 2 ** 12;
const chatId = process.env.BOT_CHATID || -1001483444452;

const messages: Record<number, number> = {};

export async function sendBattleLogMessages(messages: string[]) {
  let messageToSend = '';

  for await (const message of messages) {
    const nextMessageToSend = messageToSend.concat('\n\n', message);

    if (messageToSend.length > MAX_MESSAGE_LENGTH) {
      await broadcast(messageToSend);
      messageToSend = message;
    } else {
      messageToSend = nextMessageToSend;
    }
  }
  await broadcast(messageToSend);
}
/**
 * @param data - —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param id - id —á–∞—Ç–∞
 */
export async function broadcast(data: string, id: number | string = chatId): Promise<void> {
  try {
    await arena.bot.telegram.sendMessage(id, data, { parse_mode: 'Markdown' });
  } catch (e) {
    console.log(`error: broadcast: ${e.message} for ${id}`);
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –≤ –ª–æ–±–±–∏
 * @param player
 */
export async function sendExitButton(player: Player): Promise<void> {
  try {
    const { exp, gold } = player.stats.collect;
    const character = arena.characters[player.id];
    const { autoreg, nickname, lvl, prof, clan, expLimitToday, expEarnedToday } = character;

    let expMessage = `${exp}`;
    if (expEarnedToday >= expLimitToday) {
      expMessage += ' (–¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –æ–ø—ã—Ç–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è)';
    } else {
      expMessage += ` (–¥–æ—Å—Ç—É–ø–Ω–æ –µ—â—ë üìñ ${expLimitToday - expEarnedToday} —Å–µ–≥–æ–¥–Ω—è)`;
    }

    const message = await arena.bot.telegram.sendMessage(
      player.owner,
      `–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –±–æ–π:
  üìñ ${expMessage} (${character.exp}/${character.nextLvlExp})
  üí∞ ${gold} (${character.gold})
  ${autoreg ? '–ò–¥—ë—Ç –ø–æ–∏—Å–∫ –Ω–æ–≤–æ–π –∏–≥—Ä—ã...' : ''}`,
      Markup.inlineKeyboard([
        Markup.button.callback('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫', 'stop', !autoreg),
        Markup.button.callback('–í—ã—Ö–æ–¥ –≤ –ª–æ–±–±–∏', 'exit', autoreg),
      ]),
    );

    if (autoreg) {
      messages[message.chat.id] = message.message_id;
      await broadcast(
        `–ò–≥—Ä–æ–∫ ${clan ? `\\[${clan.name}]` : ''} *${nickname}* (${Profs.profsData[prof].icon}${lvl}) –Ω–∞—á–∞–ª –ø–æ–∏—Å–∫ –∏–≥—Ä—ã`,
      );
    }
  } catch (e) {
    console.log(`error: sendExitButton: ${e.message} for ${player.id}`);
  }
}
